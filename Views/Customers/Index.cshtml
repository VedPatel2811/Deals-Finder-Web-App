@model Lab5.Models.ViewModels.CustomerSubscriptionsViewModel

@{
    ViewData["Title"] = "Customers";
}

<style>
    /* Main table styling */
    .table {
        width: 100%;
        border-collapse: collapse;
        margin-bottom: 20px;
    }

        .table th {
            background-color: #f8f9fa;
            padding: 12px;
            text-align: left;
            border-bottom: 2px solid #dee2e6;
        }

        .table td {
            padding: 12px;
            border-bottom: 1px solid #dee2e6;
            vertical-align: top;
        }

    /* Highlight selected row */
    .success {
        background-color: #e8f5e9;
    }

    /* Action links styling */
    .btn-link {
        color: #007bff;
        text-decoration: none;
        background: none;
        border: none;
        padding: 0;
        cursor: pointer;
    }

        .btn-link:hover {
            color: #0056b3;
            text-decoration: underline;
        }

    /* Subscription list styling */
    .subscription-list {
        background-color: #f8f9fa;
        padding: 10px;
        border-radius: 4px;
        margin-top: 5px;
    }

        .subscription-list span {
            display: inline-block;
            margin-right: 10px;
            padding: 3px 8px;
            background-color: #e9ecef;
            border-radius: 3px;
            margin-bottom: 5px;
        }

    /* Action separator */
    .action-separator {
        color: #6c757d;
        padding: 0 5px;
    }

    /* Responsive adjustments */
    @@media (max-width: 768px) {
        .table th, .table td {
            padding: 8px;
        }
    }
</style>

<h1>Customers</h1>

<p>
    <a asp-action="Create" class="btn btn-primary">Create New</a>
</p>

<table class="table">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.Customers.First().LastName)</th>
            <th>@Html.DisplayNameFor(model => model.Customers.First().FirstName)</th>
            <th>@Html.DisplayNameFor(model => model.Customers.First().BirthDate)</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var customer in Model.Customers)
        {
            string selectedRow = "";
            int? customerIDSelected = ViewData["customerID"] != null ? Convert.ToInt32(ViewData["customerID"]) : null;
            if (customer.Id == customerIDSelected)
            {
                selectedRow = "success";
            }
            <tr class="@selectedRow">
                <td>@Html.DisplayFor(modelItem => customer.LastName)</td>
                <td>@Html.DisplayFor(modelItem => customer.FirstName)</td>
                <td>@Html.DisplayFor(modelItem => customer.BirthDate)</td>
                <td>
                    <a asp-action="Index" asp-route-id="@customer.Id">Select</a>
                    <span class="action-separator">|</span>
                    <a asp-action="Subscriptions" asp-route-id="@customer.Id">Edit Subscriptions</a>
                    <span class="action-separator">|</span>
                    <a asp-action="Edit" asp-route-id="@customer.Id">Edit</a>
                    <span class="action-separator">|</span>
                    <a asp-action="Details" asp-route-id="@customer.Id">Details</a>
                    <span class="action-separator">|</span>
                    <a asp-action="Delete" asp-route-id="@customer.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@if (Model.Subscriptions != null)
{
    int? customerIDSelected = ViewData["customerID"] != null ? Convert.ToInt32(ViewData["customerID"]) : null;
    
    <h3>Subscribed Food Delivery Services</h3>
    
    <div class="subscription-list">
        @{
            var subscribedServices = Model.Subscriptions
                .Where(s => s.CustomerId == customerIDSelected)
                .Select(s => s.FoodDeliveryService)
                .ToList();

            if (subscribedServices.Any())
            {
                foreach (var service in subscribedServices)
                {
                    <span>@service.Title</span>
                }
            }
            else
            {
                <span>No services subscribed</span>
            }
        }
    </div>
}